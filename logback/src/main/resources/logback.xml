<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
<!--    property表示通用配置，方面引用，引用方式：${name}-->
    日志输出格式：
  <!--  %-10level 级别 案例为设置10个字符，左对齐
    %d{yyyy-MM-dd HH:mm:ss.SSS}日期
    %c 类全限定名
    %M 执行日志的方法
    %L 行号
    %thread 线程名
    %m或者%msg 信息
    %n 换行
    -->
    <property name="pattern" value="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} %c %M %L %thread %m %n"/>
<!--    配置文件输出路径-->
    <property name="logDir" value="D://logTest"/>
<!--    文件appender-->
    <appender name="fileAppender" class="ch.qos.logback.core.FileAppender">
<!--        引入文件位置-->
        <file>${logDir}/logback.log</file>
<!--        设置输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>
    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
<!--        表示对于日志输出目标的配置 默认System.out 黑色字体输出日志-->
        <target>
            System.err
        </target>
<!--        配置日志输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>
<!--    配置可拆分归档的文件-->
    <appender name="rollingAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
<!--        引入文件位置-->
        <file>${logDir}/roll_logback.log</file>
<!--        指定拆分规则-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
<!--            按照时间和压缩格式声明文件名-->
            <fileNamePattern>${logDir}/roll.%d{yyyy-MM-dd}.log%i.gz</fileNamePattern>
<!--            按照文件大小拆分-->
            <maxFileSize>1kb</maxFileSize>
        </rollingPolicy>
    </appender>
<!--    配置控制台的appender 使用过滤器-->
    <appender name="consoleFilterAppender" class="ch.qos.logback.core.ConsoleAppender">
        <target>
            System.err
        </target>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
<!--            设置日志输出级别-->
            <level>ERROR</level>
<!--            高于level中设置的级别，则打印日志-->
            <onMatch>ACCEPT</onMatch>
<!--            低于level中设置的级别，则屏蔽日志-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

<!--    异步appender-->
    <appender name="asyncAppender" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="consoleAppender"/>
    </appender>
    <root level="ALL">
<!--        <appender-ref ref="fileAppender"/>-->
        <appender-ref ref="asyncAppender"/>
    </root>
<!--    additivity="false" 表示不继承rootlogger-->
    <logger name="com.zp" level="error" additivity="false">
        <appender-ref ref="consoleAppender"/>
    </logger>
</configuration>